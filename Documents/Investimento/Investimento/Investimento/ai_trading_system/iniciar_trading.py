#!/usr/bin/env python3
"""
ü§ñ INICIAR TRADING REAL - SUA IA OPERANDO!
Script para come√ßar as opera√ß√µes reais na Binance
"""

import os
import sys
import time
from datetime import datetime

# Adicionar paths
current_dir = os.path.dirname(__file__)
sys.path.append(os.path.join(current_dir, 'core'))

def print_banner():
    """Banner de in√≠cio"""
    print("=" * 60)
    print("ü§ñ INICIANDO TRADING REAL COM IA")
    print("üí∞ Seus $100 ser√£o operados automaticamente")
    print("üöÄ Sistema h√≠brido: IA + Momentum")
    print("üìÖ", datetime.now().strftime("%d/%m/%Y √†s %H:%M:%S"))
    print("=" * 60)

def verificar_configuracao():
    """Verifica se est√° tudo pronto"""
    print("\nüîç VERIFICANDO CONFIGURA√á√ÉO...")
    print("-" * 40)
    
    try:
        from config import TradingConfig
        
        # Verifica modo live
        if TradingConfig.TESTNET_MODE:
            print("‚ö†Ô∏è ATEN√á√ÉO: Modo TESTNET ativo")
            print("üí° Para trading real, configure TESTNET_MODE = False")
            return False
        else:
            print("‚úÖ Modo LIVE ativo - Trading real!")
        
        # Verifica API keys
        if TradingConfig.BINANCE_API_KEY and TradingConfig.BINANCE_API_SECRET:
            print("‚úÖ API Keys configuradas")
        else:
            print("‚ùå API Keys n√£o configuradas")
            return False
        
        # Verifica live trading
        if TradingConfig.LIVE_TRADING:
            print("‚úÖ Live Trading habilitado")
        else:
            print("‚ùå Live Trading desabilitado")
            return False
        
        print("‚úÖ Configura√ß√£o v√°lida para trading real!")
        return True
        
    except ImportError as e:
        print(f"‚ùå Erro ao carregar configura√ß√£o: {e}")
        return False

def verificar_conta():
    """Verifica conta na Binance"""
    print("\nüí∞ VERIFICANDO SUA CONTA BINANCE...")
    print("-" * 40)
    
    try:
        from binance_real_data import binance_data
        
        # Pega saldo atual
        balance = binance_data.get_account_balance()
        
        print(f"üíµ Saldo Total: ${balance['total_usdt']:.2f}")
        print(f"üí∏ Dispon√≠vel: ${balance['free_usdt']:.2f}")
        
        if balance['total_usdt'] < 10:
            print("‚ö†Ô∏è Saldo muito baixo para trading")
            print("üí° Recomendado: pelo menos $10 USDT")
            return False
        
        print("‚úÖ Saldo suficiente para come√ßar!")
        return True
        
    except Exception as e:
        print(f"‚ùå Erro ao verificar conta: {e}")
        return False

def mostrar_estrategia():
    """Mostra a estrat√©gia que ser√° usada"""
    print("\nüß† ESTRAT√âGIA DA IA:")
    print("-" * 40)
    print("ü§ñ 60% - Sinais da Intelig√™ncia Artificial")
    print("üìà 40% - An√°lise de Momentum (SMA, RSI)")
    print("üéØ Pares: BTC/USDT, ETH/USDT")
    print("üõ°Ô∏è Stop-loss: 5% autom√°tico")
    print("üí∞ M√°ximo por trade: 2% do saldo")
    print("‚è∞ An√°lise a cada 5 minutos")

def confirmar_inicio():
    """Confirma se quer come√ßar"""
    print("\n‚ö†Ô∏è CONFIRMA√á√ÉO FINAL:")
    print("-" * 40)
    print("üî¥ VOC√ä EST√Å PRESTES A INICIAR TRADING REAL")
    print("üí∞ A IA vai operar com SEU DINHEIRO REAL")
    print("üìä Opera√ß√µes ser√£o executadas automaticamente")
    print("üõë Voc√™ pode parar a qualquer momento (Ctrl+C)")
    
    while True:
        resposta = input("\nü§î Tem certeza que quer come√ßar? (SIM/n√£o): ").strip().upper()
        
        if resposta in ['SIM', 'S', 'YES', 'Y']:
            return True
        elif resposta in ['N√ÉO', 'NAO', 'N', 'NO']:
            return False
        else:
            print("‚ùì Por favor, digite SIM ou N√ÉO")

def iniciar_bot():
    """Inicia o bot de trading"""
    print("\nüöÄ INICIANDO BOT DE TRADING...")
    print("-" * 40)
    
    try:
        from config import TradingConfig
        from binance_ai_bot import BinanceAIBot
        
        # Cria o bot
        bot = BinanceAIBot(
            api_key=TradingConfig.BINANCE_API_KEY,
            api_secret=TradingConfig.BINANCE_API_SECRET,
            testnet=TradingConfig.TESTNET_MODE
        )
        
        print("‚úÖ Bot criado com sucesso!")
        print("üîÑ Iniciando loop de trading...")
        print("üí° Pressione Ctrl+C para parar")
        
        # Loop principal de trading
        while True:
            try:
                print(f"\n‚è∞ {datetime.now().strftime('%H:%M:%S')} - Analisando mercado...")
                
                # Executa ciclo de trading
                bot.run_trading_cycle()
                
                # Aguarda pr√≥ximo ciclo (5 minutos)
                print("‚è≥ Aguardando pr√≥ximo ciclo (5 min)...")
                time.sleep(300)  # 5 minutos
                
            except KeyboardInterrupt:
                print("\n\nüõë TRADING INTERROMPIDO PELO USU√ÅRIO")
                print("‚úÖ Bot parado com seguran√ßa")
                break
            except Exception as e:
                print(f"‚ùå Erro no ciclo de trading: {e}")
                print("üîÑ Continuando em 1 minuto...")
                time.sleep(60)
        
    except Exception as e:
        print(f"‚ùå Erro ao iniciar bot: {e}")
        print("üí° Verifique suas configura√ß√µes")

def main():
    """Fun√ß√£o principal"""
    print_banner()
    
    # Verifica√ß√µes de seguran√ßa
    if not verificar_configuracao():
        print("\n‚ùå Configura√ß√£o inv√°lida. Corrija antes de continuar.")
        input("‚è∏Ô∏è Pressione Enter para sair...")
        return
    
    if not verificar_conta():
        print("\n‚ùå Problema com conta Binance. Verifique antes de continuar.")
        input("‚è∏Ô∏è Pressione Enter para sair...")
        return
    
    # Mostra estrat√©gia
    mostrar_estrategia()
    
    # Confirma√ß√£o final
    if not confirmar_inicio():
        print("\nüëã Trading cancelado pelo usu√°rio")
        input("‚è∏Ô∏è Pressione Enter para sair...")
        return
    
    # Inicia bot
    iniciar_bot()
    
    print("\n" + "=" * 60)
    print("üëã Obrigado por usar o AI Trading System!")
    print("üí∞ Seus investimentos continuam seguros")
    print("=" * 60)

if __name__ == "__main__":
    main()
